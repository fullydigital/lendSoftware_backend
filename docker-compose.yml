version: '3'

services:
  db:
    image: postgres
    ports:
      - "5432:5432" # Port für öffentliche Verbindungen öffnen
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: lendsoftware
      POSTGRES_USER: lend_user_software
      POSTGRES_PASSWORD: YfC%L&5GtDM2LhoEPrcU
    networks:
      - webnet

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      DEBUG: 'true'
      DATABASE_URL: postgres://lend_user_software:YfC%L&5GtDM2LhoEPrcU@db:5432/lendsoftware
    depends_on:
      - db
    networks:
      - webnet

  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true" # Dashboard aktivieren (nur für Entwicklung)
      - "--providers.docker=true" # Docker-Provider aktivieren
      - "--entrypoints.web.address=:80" # HTTP-Eintragspunkt
      - "--entrypoints.wesecure.address=:443" # HTTPS-Eintragspunkt
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true" # TLS-Challenge aktivieren
      - "--certificatesresolvers.myresolver.acme.email=michael.reinert@wesolve-it.com" # Email für Let's Encrypt
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json" # Speicherort für Zertifikate
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock" # Zugang zum Docker-Socket
      - "letsencrypt:/letsencrypt" # Persistente Speicherung für Zertifikate
    networks:
      - webnet

volumes:
  postgres_data:
  letsencrypt: # Volumen für Let's Encrypt

networks:
  webnet: